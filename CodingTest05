//10
#include <iostream>
#include <deque>
using namespace std;
typedef pair<int, int> Node; //Node 데이터 타입 정의

int main()
{
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	int N, L; //숫자 개수, 윈도우 크기
	cin >> N >> L;
	deque<Node> mydeque;

	for (int i = 0; i < N; i++)
	{
		int now;
		cin >> now;

		while (mydeque.size() && mydeque.back().first > now) {
			mydeque.pop_back();
		}
		mydeque.push_back(Node(now, i));
		if (mydeque.front().second <= i - L) {
			mydeque.pop_front(); //슬라이딩 윈도우 크기를 벗어나면 앞에서부터 제거
		}
		cout << mydeque.front().first << ' ';
	}
}


//8번
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int main()
{
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	int N;
	cin >> N;
	vector<int> A(N, 0);

	for (int i = 0; i < N; i++)
	{
		cin >> A[i];
	}
	sort(A.begin(), A.end());
	int Result = 0;

	for (int k = 0; k < N; k++)
	{
		long find = A[k];
		int i = 0;
		int j = N - 1;

		while (i < j)
		{
			if (A[i] + A[j] == find) {
				if (i != k && j != k) {
					Result++;
					break; //for 종료
				}
				else if (i == k)
					i++;
				else if (j == k)
					j--;
			}
			else if (A[i] + A[j] < find)
				i++;
			else
				j--;
		}
	}
	cout << Result << endl;
}
